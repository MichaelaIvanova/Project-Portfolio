@inherits UmbracoTemplatePage
@{
    Layout = null;
    var curentNode = Model.Content;
    var root = Umbraco.TypedContentAtRoot().FirstOrDefault();
    var backgroundColor = root.HasValue("backgroundColor") ? root.GetPropertyValue<string>("backgroundColor") : "#ffeddb";
    var primaryColor = root.HasValue("keyColor") ? root.GetPropertyValue<string>("keyColor") : "#e96f92";
    var secondaryColor = root.HasValue("secondaryColor") ? root.GetPropertyValue<string>("secondaryColor") : "#54fad4";
    var skyGradient = root.HasValue("skyGreadient") ? root.GetPropertyValue<string>("skyGreadient") : "#1b2947, #282f51, #36365a, #443c63, #52426b, #614973, #704f7b, #815482, #935988, #a55d8d, #b86291, #cb6692, #dd6b93, #ec7691, #f18c90, #f3a195, #f3b6a0, #f3c9b2, #f3dcc7, #ffeddb";
    var mountainShadow = root.HasValue("mountainShadowColor") ? root.GetPropertyValue<string>("mountainShadowColor") : "#75517D";
    var mountainDarkColor = root.HasValue("mountainDarkColor") ? root.GetPropertyValue<string>("mountainDarkColor") : "#1B2947";

    var sections = curentNode.Children.ToList();
}

<html>
<head>
    <title>Michaela Ivanova</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="/scripts/bootstrap.min.js"></script>
    <link href="/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css">
    <link rel="stylesheet" href="/css/style.css" />
    <style type="text/css">
       body {
           --main-bg-color: @backgroundColor;
           --primary-key-color: @primaryColor;
           --secondary-key-color: @secondaryColor;
           --sky-gradient: @skyGradient;
           --button-color: @mountainShadow;
           --text-color:@mountainDarkColor;
       }


    </style>
</head>
<body>
    <div class="ScrollWrapper">
        <header class="Header js-HasVH" data-vh="0.75">
            @Html.Partial("_Navigation", sections)
            <div class="Scene">
                <div class="Scene-sky" role="presentation"></div>
                <canvas class="Scene-stars" role="presentation"></canvas>
                <canvas class="Scene-mountains" data-stop-on-scroll="true" role="presentation"></canvas>
            </div>
            <h1 class="Title">
                <span class="Title-big Title-Center" aria-label="Michaela Ivanova">
                    <span class="Title-Center-left" aria-hidden="true">Michaela</span>
                    <span class="Title-Center-right" aria-hidden="true">Ivanova</span>
                </span>
                <span class="Title-small Title-Center" aria-label="Creative Developer">
                    <span class="Title-Center-left" aria-hidden="true">Web</span>
                    <span class="Title-Center-right" aria-hidden="true">Developer</span>
                </span>
                <div class="Title-separator js-Lazyload" role="presentation" data-image="img/separator-green.svg"></div>
            </h1>
        </header>
        <main>
            <div class="container">
                @Html.Partial("_Sections", sections)
                <footer>
                    <h2 id="contact">Contact</h2>
                    <div class="text-center">
                        <div class="Contact-heading">You can drop me a line at</div><a class="Email Footer-link"><strong>lucasbbebber</strong> at <strong>gmail</strong> dot com</a>
                        <div class="Contact-heading">You can find me on</div>
                        <div class="Social">
                            <a class="Footer-link Social-link" href="http://codepen.io/lbebber"><strong>codepen</strong>.io/<strong>lbebber</strong></a><br /><a class="Footer-link Social-link" href="http://twitter.com/lucasbebber"><strong>twitter</strong>.com/<strong>lucasbebber</strong></a><br /><a class="Footer-link Social-link" href="http://dribbble.com/lbebber"><strong>dribbble</strong>.com/<strong>lbebber</strong></a>
                        </div>
                    </div>
                </footer>
            </div>
        </main>
        <div class="Scene--bottom">
            <canvas class="Scene-mountains Scene-mountains--bottom"></canvas>
        </div>
    </div>
    <script id="vs" type="x-shader/vertex">
        attribute vec3 position;void main(){gl_Position=vec4(position,1.0);}
    </script>
    <script id="fs" type="x-shader/fragment">
        uniform float t;
        uniform float s;
        uniform float sunSize;
        uniform vec2 r;
        uniform sampler2D i;

        float power(float value,float p){
        float f=floor(value);
        float r=value-f;
        if(r>0.5){
        r=(r*2.0)-1.0;
        r=pow(r,1.0/p);
        r=(r/2.0)+0.5;
        }else{
        r*=2.0;
        r=pow(r,p);
        r/=2.0;
        }
        return r+f;
        }
        vec3 getDisplacement(float dist){
        float global=(dist*6.0)-t*0.9;
        float distortion=(sin(global*2.0-(t*0.5))+1.0)*0.55;
        float distorted=global-(distortion*0.45);
        float local=distorted-floor(distorted);
        float stripedDistance=mod(local*4.0,1.0);
        float striped=(power(local*4.0,12.0)+-0.4)/4.0;
        return vec3(striped,stripedDistance,local);
        }
        void main(){
        vec2 pos=gl_FragCoord.xy/r;
        pos.y-=0.5/r.y;
        pos=vec2(pos.x,1.0-pos.y);
        if(pos.y>0.5){
        float dist=(pos.y-0.5)/0.5;
        vec3 displacement=getDisplacement(dist);
        float w=displacement.x;
        pos.y+=w*0.35*dist*s;
        }else{
        float sunDistance=(sunSize/r.x)*0.75;
        float falloff=2.5;
        falloff=1.0+falloff;
        float p=1.0-(abs(pos.x-0.5)/(sunDistance*falloff));
        if(p>0.0){
        float cutoff=1.0-(1.0/falloff);
        if(p>cutoff){
        p=1.0;
        }else{
        p=(p/cutoff);
        p=pow(p,2.0);
        p*=0.2;
        }
        pos.x+=sin((t*7.0)+(pos.y*150.0))*(sunDistance*0.1)*p*s;
        }
        }
        vec4 textureColor=texture2D(i,pos);
        float a=textureColor.a;
        if(a
        <1.0){ vec3 matte=vec3(1.0,0.92,0.85);
               float a2=a*1.0;
               float sunDistance=(sunSize/r.x)*0.85;
               float p=1.0-(abs(pos.x-0.5)/sunDistance);
               if(p>
            0.0){
            a2=a*0.0;
            }
            textureColor=vec4((textureColor.rgb*a2)+(matte*(1.0-a2)),a);
            }
            gl_FragColor=vec4(textureColor.rgb*textureColor.a,textureColor.a);
            }
    </script>
    <script type="text/javascript">
    colors = {
        whiteish: '@backgroundColor',
        yellow: '#F7F7B6',
        pink: '@primaryColor',
        purple: '@mountainShadow',
        blackish: '@mountainDarkColor',
        green: '@secondaryColor'
    }

        $('.Work').hover(
            function () {
                console.log('eveeeeeeeeeeeeeeeeee');
                $(this).toggleClass('bounce');
            }
        )

    </script>
    <script src="/scripts/main.js"></script>
</body>
</html>